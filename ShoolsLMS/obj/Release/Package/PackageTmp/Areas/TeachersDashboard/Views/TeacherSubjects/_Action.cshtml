
@model ShoolsLMS.Areas.Dashboard.ViewModels.SubjectActionModel

@if (Model != null)
{
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">
                @if (Model.ID > 0)
                {
                    <span>Edit Subject</span>
                }
                else
                {
                    <span>Create Subject</span>
                }
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <form id="actionForm">
                <input type="hidden" name="ID" value="@Model.ID" />
                <div class="form-group">
                    <label>Grade</label>
                    <select class="form-control" name="GradeID">
                        @if (Model.Grades != null)
                        {
                            foreach (var grades in Model.Grades)
                            {
                                <option value="@grades.GradeId" @(grades.GradeId == Model.GradeId ? "selected" : string.Empty)>
                                    @grades.GradeName
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Name</label>
                    <input class="form-control" name="Name" placeholder="Enter Subject Name" value="@Model.Name">
                </div>
                <div class="form-group">
                    <label>Code</label>
                    <input class="form-control" name="Code" placeholder="Enter Subject Code" value="@Model.Code">
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <input class="form-control" name="Description" placeholder="Enter Subject Description" value="@Model.Description">
                </div>
                
                <div class="form-group">
                    <label>Pictures</label>
                    <input id="selectPictures" class="form-control" name="Picture" type="file" multiple />
                    <input type="hidden" name="pictureIDs" id="pictureIDs" value="" />
                </div>
                <div id="picturesArea">
                    @if (Model.SubjectPictures != null && Model.SubjectPictures.Count > 0)
                    {
                        foreach (var activityPictures in Model.SubjectPictures)
                        {
                            <img src="/images/site/@activityPictures.Picture.URL" class="img-fluid" style="width:200px" onclick="removeMe(this)" data-id="@activityPictures.PictureID" />
                        }
                    }
                </div>
            </form>

            <div class="errorDiv">

            </div>
        </div>
        <div class="modal-footer">
            <button id="actionButton" type="button" class="btn btn-primary"><i class="fas fa-save mr-1"></i>Save</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-times mr-1"></i>Close</button>
        </div>
    </div>
}
<div id="imageTemplate">
    <img src="" class="img-fluid" style="width:200px" onclick="removeMe(this)" />
</div>


<script>

    $("#actionButton").click(function () {

    var pictureIDs = [];
    $("#picturesArea img").each(function ()
    {
        var picID = $(this).attr("data-id");

        pictureIDs.push(picID);
    });

    $("#pictureIDs").val(pictureIDs.join());

        $.ajax({
            url: '@Url.Action("Action", "TeacherSubjects")',
            type: "post",
            data: $("#actionForm").serialize()
        })
            .done(function (response) {
                if (response.Success) {
                    //data is saved... reload listing
                    location.reload();
                }
                else {
                    $(".errorDiv").html(response.Message);
                }
            });
    });




    $("#selectPictures").change(function () {

        var pictures = this.files;
        var formData = new FormData();

        for (var i = 0; i < pictures.length; i++) {
            formData.append("Picture", pictures[i]);
        }
        $.ajax({
            url: '@Url.Action("UploadPictures", "TeachersDashboard")',
            type: "post",
            data: formData,
            processData: false,
            contentType: false
        })
        .done(function (response) {

            for (var i = 0; i < response.length; i++)
            {
                var picture = response[i];
                var $imgHTML = $("#imageTemplate").clone();
                $imgHTML.find("img").attr("src", "/images/site/" + picture.URL);
                $imgHTML.find("img").attr("data-id", picture.ID);

                $("#picturesArea").append($imgHTML.html());
            }
            });
    });

    function removeMe(element) {
        element.remove();
    }

</script>



